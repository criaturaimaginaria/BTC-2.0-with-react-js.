{"version":3,"sources":["components/BtcCurrencyRow.jsx","components/BTCmarket.jsx","components/Ethereum.jsx","components/Main.jsx","logo.png","components/Nav.jsx","components/CurrencyRow.jsx","components/OtherCurrency.jsx","components/Footer.jsx","App.js","index.js"],"names":["BtcCurrencyRow","props","symbols","currencyOptions","selectedCurr","selectedCurrency","priceAmount","selectCurrency","amount","onChangeCurr","onChangeCurrency","amountChange","onChangeAmount","type","className","value","onChange","symbol","map","option","BTCmarket","BtcUrl","useState","api","setApi","api2","setApi2","Mcap","setMcap","marketapi","a","fetch","response","json","data","number","current_price","data2","image","marketCapital","market_cap","useEffect","toAmount","fromAmount","setcurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","currencyApi","name","price","src","alt","e","target","Ethereum","img","setImg","Math","trunc","placeholder","Main","Nav","logo","to","CurrencyRow","OtherCurrency","cryptoUrl","element","id","Footer","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17471e1d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const BtcCurrencyRow = (props) => {\r\n\r\n    // const {currencyOptions, onChangeCurrency} = props\r\n    //  console.log(props.currencyOptions[0 , 0 ])\r\n    let  symbols =  (props.currencyOptions[0]) \r\n    const selectedCurr = (props?.selectedCurrency)\r\n    const selectCurr = (props?.selectCurrency)\r\n    const priceAmount = (props.amount)\r\n\r\n    const onChangeCurr = (props.onChangeCurrency)\r\n\r\n    const amountChange = (props.onChangeAmount)\r\n\r\n    // console.log(selectedCurr)\r\n    return (\r\n        <div>\r\n        \r\n           <input type=\"number\" className=\"input\" value={priceAmount} onChange={amountChange} />\r\n           <select value= {selectedCurr?.symbol}  onChange={onChangeCurr}>\r\n               {symbols?.map( option =>(\r\n                   <option key={option} value={option} > {option} </option>\r\n               ))}\r\n            \r\n           </select>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtcCurrencyRow\r\n","import React,{useState, useEffect} from 'react'\r\nimport BtcCurrencyRow from './BtcCurrencyRow'\r\n\r\nconst BTCmarket = () => {\r\n    const BtcUrl  = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false' \r\n   \r\n\r\n    const [api, setApi] = useState()\r\n    const[api2, setApi2] = useState()\r\n    const[Mcap, setMcap] = useState()\r\n\r\n    const marketapi = async () =>{\r\n        const response = await fetch(BtcUrl)\r\n        const data = await response.json() \r\n\r\n        const number = (data[0].current_price) \r\n        const data2 = (data[0].image)\r\n        const marketCapital = (data[0].market_cap)\r\n\r\n        setApi2(data2)\r\n        setApi(number)\r\n        setMcap(marketCapital)\r\n\r\n    }\r\n\r\n  useEffect(()=>{\r\n        // setInterval(fetchBtcApi, 1000 )   \r\n        marketapi()\r\n\r\n    }, )\r\n\r\n    // ------------------------------------------------------------------------\r\n    \r\n    const [currencyOptions, setcurrencyOptions] = useState ([])\r\n    const [fromCurrency, setFromCurrency] = useState ()\r\n    const [toCurrency, setToCurrency] = useState ()\r\n    const [exchangeRate, setExchangeRate] = useState()\r\n    const [amount, setAmount] = useState (1)\r\n    const [amountInFromCurrency, setAmountInFromCurrency ] = useState (true)\r\n\r\n    \r\n    \r\n\r\n    let toAmount, fromAmount\r\n    if (amountInFromCurrency) {\r\n        fromAmount = amount\r\n        toAmount = amount * exchangeRate\r\n    } else{\r\n        toAmount = amount\r\n        fromAmount = amount / exchangeRate\r\n    }    \r\n\r\n\r\n    const currencyApi = async () =>{\r\n        const response = await fetch(BtcUrl)\r\n        const data = await response.json() \r\n        \r\n        setcurrencyOptions([ data.map((name)=>name.symbol), data.map((price)=>price.current_price)])\r\n        setFromCurrency(data[0])\r\n        setToCurrency(data[2])\r\n        setExchangeRate(data[0].current_price)\r\n        // console.log(data.map((price)=> price.current_price))\r\n        // console.log(data.map((price)=> price.symbol))\r\n    }\r\n    \r\n\r\n            \r\n    useEffect(()=>{\r\n        currencyApi()\r\n       \r\n    }, [])\r\n\r\n  \r\n\r\n\r\n\r\n function handleFromAmountChange(e){\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(true)\r\n }\r\n function handleToAmountChange(e){\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(false)\r\n }\r\n \r\n\r\n    \r\n        return (\r\n            <div className=\"bitcoin\">\r\n\r\n                   <h1> Bitcoin </h1>\r\n                   <h1>Current price: {api} USD</h1>\r\n                   \r\n                   <h1> Market cap: {Mcap}</h1>\r\n                   <img src={api2}  alt=\"BTC\" className=\"btc-logo\"/>\r\n\r\n               \r\n            \r\n                   <BtcCurrencyRow \r\n                currencyOptions={currencyOptions} \r\n                selectCurrency={fromCurrency} \r\n                onChangeCurrency={e => setFromCurrency(e.target.value)}\r\n                onChangeAmount={handleFromAmountChange}\r\n                amount={fromAmount}\r\n                />\r\n                \r\n                <div>=</div>\r\n                \r\n                <BtcCurrencyRow  \r\n                currencyOptions={currencyOptions}  \r\n                selectedCurrency={toCurrency} \r\n                onChangeCurrency={e => setToCurrency(e.target.value)}\r\n                onChangeAmount={handleToAmountChange}\r\n                amount={toAmount}\r\n                />\r\n               \r\n            </div>\r\n        )\r\n    }\r\n    export default BTCmarket\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst Ethereum = () => {\r\n    const BtcUrl  = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false' \r\n    \r\n    const [api, setApi] = useState()\r\n    const[Mcap, setMcap] = useState()\r\n    const[img, setImg] = useState()\r\n\r\n\r\n    const marketapi = async () =>{\r\n        const response = await fetch(BtcUrl)\r\n        const data = await response.json() \r\n        const number = (data[1].current_price) \r\n        const marketCapital = (data[1].market_cap)\r\n        const img = (data[1].image)\r\n        \r\n        setApi(number)\r\n        setMcap(marketCapital)\r\n        setImg(img)\r\n    }\r\n\r\n  useEffect(()=>{\r\n        // setInterval(fetchBtcApi, 1000 )   \r\n        marketapi()\r\n\r\n    }, )\r\n    \r\n    return (\r\n        <div className=\"ETH\">\r\n            <h1>Ethereum </h1>\r\n            <h1>Current price: {Math.trunc(api)} USD </h1>\r\n            <h1>Market cap: {Mcap} </h1>\r\n            <img src={img}  alt=\"ETH\"/>\r\n\r\n\r\n            <h2>ETH to USD </h2>\r\n            <form>   \r\n                <input type=\"text\" name=\"satoshi\" placeholder=\"ETH\"/>\r\n\r\n                <input  type=\"text\" name=\"dollar2\" placeholder=\"USD\"/>\r\n\r\n                <input type=\"button\" value=\"convert\" />\r\n            </form> \r\n\r\n            <h2>USD to ETH </h2>\r\n            <form>   \r\n                <input type=\"text\" name=\"satoshi\" placeholder=\"USD\"/>\r\n\r\n                <input  type=\"text\" name=\"dollar2\" placeholder=\"ETH\"/>\r\n\r\n                <input type=\"button\" value=\"convert\" />\r\n            </form> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ethereum\r\n","import React from 'react'\r\n\r\nconst Main = () => {\r\n\r\n    \r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Main</h1>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","export default __webpack_public_path__ + \"static/media/logo.91508e83.png\";","import React from 'react';\r\nimport logo from '../logo.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n\r\n\r\n    return (  \r\n        \r\n        <nav>\r\n             <img src={logo} alt=\"btc nav\" className=\"logo\" />\r\n            \r\n            <ul className=\"nav-links\">\r\n                <Link to='/components/Main'>\r\n                    <li>Main</li>\r\n                </Link>    \r\n                <Link to='/components/BTCmarket'>\r\n                    <li>Bitcoin</li>\r\n                </Link> \r\n                <Link to='/components/Ethereum'>\r\n                    <li>Ethereum</li>\r\n                </Link> \r\n                <Link to='/components/OtherCurrency'>\r\n                    <li>Other Currency</li>\r\n                </Link> \r\n                \r\n            </ul>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\n\r\nexport const CurrencyRow = (props) => {\r\n\r\n    // const {currencyOptions, onChangeCurrency} = props\r\n    //  console.log(props.currencyOptions[0 , 0 ])\r\n    let  symbols =  (props.currencyOptions[0]) \r\n    const selectedCurr = (props?.selectedCurrency)\r\n    const selectCurr = (props?.selectCurrency)\r\n    const priceAmount = (props.amount)\r\n\r\n    const onChangeCurr = (props.onChangeCurrency)\r\n\r\n    const amountChange = (props.onChangeAmount)\r\n\r\n    // console.log(selectedCurr)\r\n    return (\r\n        <div>\r\n        \r\n           <input type=\"number\" className=\"input\" value={priceAmount} onChange={amountChange} />\r\n           <select value= {selectedCurr?.symbol}  onChange={onChangeCurr}>\r\n               {symbols?.map( option =>(\r\n                   <option key={option} value={option} > {option} </option>\r\n               ))}\r\n            \r\n           </select>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyRow\r\n","import React,  {useState, useEffect} from 'react'\r\nimport  CurrencyRow  from './CurrencyRow'\r\n\r\n\r\n\r\nconst OtherCurrency = () => {\r\n    const cryptoUrl  = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false'\r\n\r\n//   -------------------------LIST------------------------------  \r\n    const [api, setApi] = useState([])\r\n\r\n    const marketapi = async () =>{\r\n        const response = await fetch(cryptoUrl)\r\n        const data = await response.json() \r\n\r\n        const number = (data) \r\n        // console.log(number.map((precio)=>precio.current_price))    \r\n        setApi(number)   \r\n    }\r\n\r\n    useEffect(()=>{  \r\n        marketapi()\r\n    },[] )\r\n// ------------------------------------------------------------------------\r\n    \r\n        const [currencyOptions, setcurrencyOptions] = useState ([])\r\n        const [fromCurrency, setFromCurrency] = useState ()\r\n        const [toCurrency, setToCurrency] = useState ()\r\n        const [exchangeRate, setExchangeRate] = useState()\r\n        const [amount, setAmount] = useState (1)\r\n        const [amountInFromCurrency, setAmountInFromCurrency ] = useState (true)\r\n\r\n        \r\n        \r\n\r\n        let toAmount, fromAmount\r\n        if (amountInFromCurrency) {\r\n            fromAmount = amount\r\n            toAmount = amount * exchangeRate\r\n        } else{\r\n            toAmount = amount\r\n            fromAmount = amount / exchangeRate\r\n        }    \r\n\r\n    \r\n        const currencyApi = async () =>{\r\n            const response = await fetch(cryptoUrl)\r\n            const data = await response.json() \r\n            \r\n            setcurrencyOptions([ data.map((name)=>name.symbol), data.map((price)=>price.current_price)])\r\n            setFromCurrency(data[0])\r\n            setToCurrency(data[2])\r\n            setExchangeRate(data[0].current_price)\r\n            // console.log(data.map((price)=> price.current_price))\r\n            // console.log(data.map((price)=> price.symbol))\r\n        }\r\n        \r\n\r\n                \r\n        useEffect(()=>{\r\n            currencyApi()\r\n           \r\n        }, [])\r\n\r\n      \r\n\r\n\r\n\r\n     function handleFromAmountChange(e){\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(true)\r\n     }\r\n     function handleToAmountChange(e){\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(false)\r\n     }\r\n     \r\n    return (\r\n\r\n   \r\n        <div className=\"currencies\">\r\n            <h1>other currencies</h1>\r\n\r\n            <select name=\"currencies\" >\r\n                {api.map(element=>(\r\n                    <option key={element.id} value={element.current_price}  > {element.name}</option>\r\n                ))\r\n                }\r\n\r\n               \r\n            </select>\r\n            \r\n                <CurrencyRow \r\n                currencyOptions={currencyOptions} \r\n                selectCurrency={fromCurrency} \r\n                onChangeCurrency={e => setFromCurrency(e.target.value)}\r\n                onChangeAmount={handleFromAmountChange}\r\n                amount={fromAmount}\r\n                />\r\n                \r\n                <div>=</div>\r\n                \r\n                <CurrencyRow  \r\n                currencyOptions={currencyOptions}  \r\n                selectedCurrency={toCurrency} \r\n                onChangeCurrency={e => setToCurrency(e.target.value)}\r\n                onChangeAmount={handleToAmountChange}\r\n                amount={toAmount}\r\n                />\r\n\r\n                 \r\n\r\n            </div>\r\n\r\n           \r\n              \r\n    )\r\n}\r\n\r\nexport default OtherCurrency\r\n","import React from 'react'\r\n\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n      \r\n            <footer >\r\n                footer  @Holagmail.com\r\n\r\n            </footer>    \r\n \r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './App.css';\nimport BTCmarket from './components/BTCmarket';\nimport Ethereum from './components/Ethereum';\n// import FetchBtc from './components/FetchBtc';\n// import FetchBtc3 from './components/fetchBtc3';\nimport Main from './components/Main';\nimport Nav from './components/Nav';\nimport OtherCurrency from './components/OtherCurrency'; \nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Footer from './components/Footer';\n\n\n \nfunction App() {\n  return (\n\n    <Router>\n        <div className=\"App\">\n          <Nav />    \n              \n              <Switch  className=\"swit\">\n                <Route path=\"/\" exact component={Main} />\n                <Route path=\"/components/Main\"  component={Main} />\n                <Route path=\"/components/BTCmarket\"  component={BTCmarket} />\n                <Route path=\"/components/Ethereum\"  component={Ethereum} />\n                <Route path=\"/components/OtherCurrency\"  component={OtherCurrency} />\n              </Switch>     \n\n          <Footer />\n\n          {/* <FetchBtc3 /> */}\n          {/* <FetchBtc /> */}\n         </div>\n\n    </Router>\n       \n      \n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}